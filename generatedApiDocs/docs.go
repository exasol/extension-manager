// Package generatedApiDocs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package generatedApiDocs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Exasol Integration team",
            "email": "opensource@exasol.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/exasol/extension-manager/blob/main/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/extensions": {
            "get": {
                "description": "Get a list of all available extensions.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all extensions",
                "operationId": "getExtensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hostname of the Exasol DB to manage",
                        "name": "dbHost",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "port number of the Exasol DB to manage",
                        "name": "dbPort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username of the Exasol DB to manage",
                        "name": "dbUser",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password of the Exasol DB to manage",
                        "name": "dbPass",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/restAPI.ExtensionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/installations": {
            "get": {
                "description": "Get a list of all installations. Installation means, that an extension is installed in the database (e.g. JAR files added to BucketFS, Adapter Script created).",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all installations",
                "operationId": "getInstallations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hostname of the Exasol DB to manage",
                        "name": "dbHost",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "port number of the Exasol DB to manage",
                        "name": "dbPort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username of the Exasol DB to manage",
                        "name": "dbUser",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password of the Exasol DB to manage",
                        "name": "dbPass",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/restAPI.InstallationsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "This installs an extension",
                "produces": [
                    "application/json"
                ],
                "summary": "Install an extension",
                "operationId": "installExtension",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hostname of the Exasol DB to manage",
                        "name": "dbHost",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "port number of the Exasol DB to manage",
                        "name": "dbPort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "username of the Exasol DB to manage",
                        "name": "dbUser",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password of the Exasol DB to manage",
                        "name": "dbPass",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id of the extension to install",
                        "name": "extensionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "version of the extension to install",
                        "name": "extensionVersion",
                        "in": "query",
                        "required": true
                    },
                    {
                        "default": "",
                        "description": "dummy body",
                        "name": "dummy",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "restAPI.ExtensionsResponse": {
            "description": "Response containing all available extensions",
            "type": "object",
            "properties": {
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restAPI.ExtensionsResponseExtension"
                    }
                }
            }
        },
        "restAPI.ExtensionsResponseExtension": {
            "description": "Extension information",
            "type": "object",
            "properties": {
                "description": {
                    "description": "The description of the extension to be displayed to the user.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the extension. Don't store this as it may change in the future.",
                    "type": "string"
                },
                "installableVersions": {
                    "description": "A list of versions of this extension available for installation.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "The name of the extension to be displayed to the user.",
                    "type": "string"
                }
            }
        },
        "restAPI.InstallationsResponse": {
            "type": "object",
            "properties": {
                "installations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/restAPI.InstallationsResponseInstallation"
                    }
                }
            }
        },
        "restAPI.InstallationsResponseInstallation": {
            "type": "object",
            "properties": {
                "instanceParameters": {
                    "type": "array",
                    "items": {}
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Exasol extension manager REST API",
	Description:      "Extension information",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
